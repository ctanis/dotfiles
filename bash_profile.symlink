#  -*- Mode: Shell-script; -*- 


if [ -z $INSIDE_EMACS ]; then
# not in emacs
export EDITOR=vi
#export PAGER=most
export PAGER=less
else
# in emacs
export EDITOR=emacsclient
export PAGER=cat
fi

export GNUTERM=X11
export TEXINPUTS="~/.tex:.:$TEXINPUTS"
export LESS="-erX"


# may need to override this in a bash-local
export TEXBIN=/usr/local/texlive/2012/bin/universal-darwin
export PATH=.:~/bin:~/.dotfiles/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11/bin:$TEXBIN:/Users/ctanis/cdpr7/_cdp/_cdprogs


if [ $WINDOW ]; then
export SCREEN_WINDOW="(screen $WINDOW) "
fi


function parse_git_branch {
#        git branch --no-color 2> /dev/null | sed -e 's/* \(.*\)\s*/ \<\1\> /'
    git rev-parse --abbrev-ref HEAD 2>/dev/null | sed -e 's/\(.*\)/\<\1\>/'

}

if [ $TERM != 'dumb' ]; then
#export PS1='\h:\W\$ \[\e]0;${SCREEN_WINDOW}\h:\w\a\]'
export PS1='\[\e[1;10m\]\h:\W$ \[\e[0m\]\[\e]0;${SCREEN_WINDOW}\h:\w `parse_git_branch`\a\]'
else
#mostly for emacs shell...
export PS1='\h:\W\$ '
fi


export PERL5LIB=~/.perl/local


       
## configure bash history stuff
shopt -s histappend
shopt -s cmdhist
shopt -s histverify
shopt -s histreedit

export HISTIGNORE="&:history*"
export HISTFILESIZE=1000
export HISTSIZE=1000
export PROMPT_COMMAND="history -a"

# no colors in my ls
export LS_OPTIONS='-p'
alias ls='ls $LS_OPTIONS'


# Default to screen reconnect if possible
alias scr=/usr/bin/screen
alias screen='screen -R'

# extended glob features and programmable tab completion
shopt -s extglob progcomp

## directory commands only complete with directories
complete -d pushd cd


PLATFORM=`uname`
if [ $PLATFORM == 'Linux' ]; then
function edit()
{
    until emacsclient -n $*  >/dev/null 2>&1; do
	sleep 1;
    done;
}
else
function edit()
{
    osascript -e 'tell application "Emacs" to activate'

    until emacsclient -n $*  >/dev/null 2>&1; do
	sleep 1;
    done;
}
fi; 

if [ $PLATFORM == 'Darwin' -a $TERM == 'xterm' ]; then
    # select a random color scheme from terminal options specified in TERM_COLOR_CHOICES
    function rand_term {
        local OPTION=${TERM_COLOR_CHOICES[$RANDOM % ${#TERM_COLOR_CHOICES[@]}]}
        osascript -e 'tell application "Terminal" to set current settings of first window to settings set '$OPTION
    }
fi



function update_repos ()
{
    for i in `cat ~/.active_repos`; do
	d=`eval echo $i;`
	if [ -d $d ]; then 
	    echo $d;
	   sh -c "cd $d && git fetch";
	else
	    echo "** $d not found **";
	fi;

    done;

    cd ~/.dotfiles && git pull
    `emacs -batch --eval '(byte-recompile-directory "~/.dotfiles/elisp")'`
}



function check_repos ()
{
    for i in `cat ~/.active_repos`; do
	d=`eval echo $i;`
	if [ -d $d ]; then 
	    echo $d;
	    sh -c "cd $d && git status";
	else
	    echo "** $d not found **";
	fi;
    done;

    `emacs -batch --eval '(byte-recompile-directory "~/.dotfiles/elisp")'`
}


if [ -f ~/.bash-local ]; then
	source ~/.bash-local
fi



# if [ -f ~/.bashrc ]; then
#    source ~/.bashrc
# fi



# run this if we're using terminal
# if [ "$TERM_PROGRAM" = Apple_Terminal ]; then
# 	~/.dotfiles/scripts/terminal_color.sh
# fi
